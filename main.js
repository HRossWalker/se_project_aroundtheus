!function(){"use strict";var t=class{constructor(t,e,s,i,r){this._name=t.name,this._link=t.link,this._id=t._id,this._likeStatus=t.isLiked,this._cardSelector=e,this._handleImageClick=s,this._handleDeleteClick=i,this._handleLikeDislike=r}_setEventListeners(){this._cardImageElement.addEventListener("click",(()=>this._handleImageClick(this))),this._likeIcon.addEventListener("click",(()=>this._handleLikeDislike(this._likeStatus,this._id))),this._trashIcon.addEventListener("click",(()=>{this._handleDeleteClick(this._id)}))}_handleLikeIcon(){this._likeIcon.classList.toggle("card__like-button_active")}handleDeleteCard(){this._cardElement.remove()}_getTemplate(){return this._cardElement=document.querySelector(this._cardSelector).content.querySelector(".card").cloneNode(!0),this._cardElement}getView(){return this._element=this._getTemplate(),this._cardTitleElement=this._cardElement.querySelector(".card__title"),this._cardTitleElement.textContent=this._name,this._cardImageElement=this._cardElement.querySelector(".card__image"),this._cardImageElement.src=this._link,this._cardImageElement.alt=this._name,this._likeIcon=this._cardElement.querySelector(".card__like-button"),this._likeStatus&&this._likeIcon.classList.add("card__like-button_active"),this._trashIcon=this._cardElement.querySelector(".card__trash-button"),this._deleteModal=document.querySelector("modal__delete-modal_active"),this._setEventListeners(),this._element}},e=class{constructor(t,e){this._formSelector=t.formSelector,this._inputSelector=t.inputSelector,this._submitButtonSelector=t.submitButtonSelector,this._inactiveButtonClass=t.inactiveButtonClass,this._inputErrorClass=t.inputErrorClass,this._errorClass=t.errorClass,this._formEl=e,this._inputList=[...this._formEl.querySelectorAll(this._inputSelector)],this._submitButton=this._formEl.querySelector(this._submitButtonSelector)}_setEventListeners(){this._inputList.forEach((t=>{t.addEventListener("input",(()=>{this._inputEl=t,this._checkInputValidity(t),this._toggleButtonState()}))}))}_showInputError(){this._errorMessageEl=document.querySelector(`#${this._inputEl.id}-error`),this._errorMessageEl.textContent=this._inputEl.validationMessage,this._inputEl.classList.add(this._inputErrorClass),this._errorMessageEl.classList.add(this._errorClass)}_checkInputValidity(){if(!this._inputEl.validity.valid)return this._showInputError();this._hideInputError()}_hideInputError(){this._errorMessageEl=document.querySelector(`#${this._inputEl.id}-error`),this._errorMessageEl.textContent="",this._inputEl.classList.remove(this._inputErrorClass),this._errorMessageEl.classList.remove(this._errorClass)}_toggleButtonState(){this._hasInvalidInput(this._inputList)?this._enableButton(this._inactiveButtonClass):this._disableButton(this._inactiveButtonClass)}_hasInvalidInput(){return!this._inputList.every((t=>t.validity.valid))}_enableButton(){this._submitButton.classList.add(this._inactiveButtonClass),this._submitButton.disabled=!0}_disableButton(){this._submitButton.classList.remove(this._inactiveButtonClass),this._submitButton.disabled=!1}enableValidation(){this._formEl.addEventListener("submit",(t=>{t.preventDefault()})),this._setEventListeners()}resetValidation(){this._toggleButtonState(),this._inputList.forEach((t=>{this._inputEl=t,this._hideInputError()}))}};const s=document.querySelector("#profile-edit-button"),i=document.querySelector("#modal-name-input"),r=document.querySelector("#modal-about-input"),a=document.querySelector(".profile__avatar-edit"),n=document.querySelector("#card-add-button"),o=document.querySelector(".cards__list"),l=document.querySelector("#modal-del-btn");var c=class{constructor(t){let{popupSelector:e}=t;this._modalEl=document.querySelector(e)}open(){this._modalEl.classList.add("modal_opened"),document.addEventListener("keyup",this._handleEsc)}close(){this._modalEl.classList.remove("modal_opened"),document.removeEventListener("keyup",this._handleEsc)}_handleEsc=t=>{"Escape"===t.key&&this.close()};setEventListeners(){this._modalEl.addEventListener("mousedown",(t=>{t.target.classList.contains("modal_opened")&&this.close(),t.target.classList.contains("modal__close")&&this.close()}))}},h=class extends c{constructor(t,e){super({popupSelector:t}),this._popupForm=this._modalEl.querySelector(".modal__form"),this._submitButton=this._modalEl.querySelector(".modal__save-button"),this._handleFormSubmit=e,this._list=[...this._popupForm.querySelectorAll(".modal__input")]}setSave(){this._submitButton.textContent="Save"}close(){this._popupForm.reset(),super.close()}setLoading(t){t&&(this._submitButton.textContent="Saving...")}_getInputValues(){const t={};return this._list.forEach((e=>{t[e.name]=e.value})),t}setEventListeners(){this._popupForm.addEventListener("submit",(()=>{this._handleFormSubmit(this._getInputValues())})),super.setEventListeners()}},d=class{constructor(t){this._name=document.querySelector(".profile__name"),this._name.textContent=t.name,this._about=document.querySelector(".profile__about"),this._about.textContent=t.about,this._avatar=document.querySelector(".profile__image"),this._avatar.src=t.avatar}getUserInfo(){}setUserAvatar(t){this._avatar.src=t}setUserInfo(t){let{name:e,about:s}=t;this._name.textContent=e,this._about.textContent=s}},_=class{constructor(t,e){let{data:s,renderer:i}=t;this._items=s,this._renderer=i,this._container=e}renderItems(){this._items.forEach((t=>{this._renderer(t)}))}addItem(t){this._container.prepend(t)}};const u={};let m,p;var E;E={formSelector:".modal__form",inputSelector:".modal__input",submitButtonSelector:".modal__save-button",inactiveButtonClass:"modal__button-disabled",inputErrorClass:"modal__input_type_error",errorClass:"modal__input-error_visible"},Array.from(document.querySelectorAll(E.formSelector)).forEach((t=>{const s=new e(E,t),i=t.getAttribute("name");u[i]=s,s.enableValidation()}));const v=new class{constructor(t){this._baseUrl=t.baseUrl,this._auth=t.authorization,this._id}getInitialCards(){return fetch(`${this._baseUrl}/cards`,{headers:{authorization:`${this._auth}`}}).then(this._checkResponse)}getUserData(){return fetch(`${this._baseUrl}/users/me`,{method:"GET",headers:{authorization:`${this._auth}`,"Content-Type":"application/json"}}).then(this._checkResponse)}updateUserData(t){let{name:e,about:s}=t;return fetch(`${this._baseUrl}/users/me`,{method:"PATCH",headers:{authorization:`${this._auth}`,"Content-Type":"application/json"},body:JSON.stringify({name:`${e}`,about:`${s}`})}).then(this._checkResponse)}updateAvatar(t){return fetch(`${this._baseUrl}/users/me/avatar`,{method:"PATCH",headers:{authorization:`${this._auth}`,"Content-Type":"application/json"},body:JSON.stringify({avatar:t})}).then(this._checkResponse)}getCards(t){return fetch(`${this._baseUrl}/cards/${t}`,{method:"GET",headers:{authorization:`${this._auth}`}}).then(this._checkResponse)}createCard(t){let{name:e,link:s}=t;return fetch(`${this._baseUrl}/cards`,{method:"POST",headers:{authorization:`${this._auth}`,"Content-Type":"application/json"},body:JSON.stringify({name:`${e}`,link:`${s}`})}).then(this._checkResponse)}deleteCard(t){return fetch(`${this._baseUrl}/cards/${t}`,{method:"DELETE",headers:{authorization:`${this._auth}`,"Content-Type":"application/json"}}).then(this._checkResponse)}likeCard(t){this._checkResponse(`${this._baseUrl}/cards/${t}/likes`,{method:"PUT",headers:{authorization:`${this._auth}`,"Content-Type":"application/json"},body:JSON.stringify({isLiked:!0})})}disLikeCard(t){this._checkResponse(`${this._baseUrl}/cards/${t}/likes`,{method:"DELETE",headers:{authorization:`${this._auth}`,"Content-Type":"application/json"}}).then(this._checkResponse)}_checkResponse(t){return t.ok?t.json():Promise.reject(`Error: ${t.status}`)}_request(t,e){return fetch(t,e).then(this._checkResponse)}}({baseUrl:"https://around-api.en.tripleten-services.com/v1",authorization:"7dcd9a93-149c-4e56-87db-9285c9177a9e"});v.getUserData().then((t=>{p=new d(t)})).catch((t=>console.error(`${t} Profile info may be incorrect`))),v.getInitialCards().then((t=>{m=new _({data:t,renderer:t=>{const e=b(t);m.addItem(e)}},o),m.renderItems()})).catch((t=>console.error(`${t} Cards may be missing`)));const b=e=>{const s=new t(e,"#card-template",(()=>{S.open(e)}),(()=>{y.open(s)}),((t,e)=>{t?v.disLikeCard(e).then((()=>s._handleLikeIcon())).catch((t=>console.error(`${t}, Failed to dislike card`))):v.likeCard(e).then((()=>s._handleLikeIcon())).catch((t=>console.error(`${t}, Failed to like card`)))}));return s.getView()},S=new class extends c{constructor(t){super({popupSelector:t}),this._popupImage=document.querySelector(".modal__picture-view"),this._popupTitle=document.querySelector(".modal__picture-heading")}open(t){let{name:e,link:s}=t;this._popupImage.src=s,this._popupImage.alt=e,this._popupTitle.textContent=e,super.open()}}("#card-picture-modal");S.setEventListeners();const k=new h("#profile-edit-modal",(function(t){k.setLoading(!0),v.updateUserData(t).then((()=>{p.setUserInfo(t),k.close()})).catch((t=>console.error(`${t}, Failed to update Profile Info`))).finally((()=>{k.setLoading(!1),k.setSave()}))}));k.setEventListeners();const L=new h("#card-add-modal",(function(t){L.setLoading(!0),v.createCard(t).then((t=>{const e=b(t);m.addItem(e),L.close()})).catch((t=>console.error(`${t}, Failed to add Card`))).finally((()=>{L.setLoading(!1),L.setSave()}))}));L.setEventListeners();const y=new class extends c{constructor(t,e){super({popupSelector:t}),this._handleDeleteConfirmation=e}open(t){super.open(),this._cardId=t._id,this._card=t}setEventListeners(){l.addEventListener("click",(()=>{this._handleDeleteConfirmation(this._card,this._cardId)})),super.setEventListeners()}}("#modal-delete",(function(t,e){v.deleteCard(e).then((()=>{t.handleDeleteCard(),y.close()})).catch((t=>console.error(`${t}, Failed to delete card`)))}));y.setEventListeners();const C=new h("#modal-avatar",(function(t){C.setLoading(!0),v.updateAvatar(t.link).then((()=>{p.setUserAvatar(t.link),C.close()})).catch((t=>console.error(`${t}, Failed to update Avatar`))).finally((()=>{C.setLoading(!1),C.setSave()}))}));C.setEventListeners(),s.addEventListener("click",(()=>{u.profileForm.resetValidation(),v.getUserData().then((t=>{i.value=t.name,r.value=t.about,k.open()})).catch((t=>console.error(`${t} Profile data may be incorrect`)))})),n.addEventListener("click",(()=>{u.addCardForm.resetValidation(),L.open()})),a.addEventListener("click",(()=>{u.avatarUpdate.resetValidation(),C.open()}))}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,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R1csY0FDQUYsTUFBTXRKLElBQ0xpRixFQUFpQjhCLE1BQVEvRyxFQUFLTyxLQUM5QjJFLEVBQWtCNkIsTUFBUS9HLEVBQUtrSCxNQUMvQjBFLEVBQWFsRyxNQUFNLElBRXBCb0YsT0FBT0MsR0FBUUMsUUFBUUMsTUFBTyxHQUFFRixvQ0FBcUMsSUFHMUUzRixFQUFjakUsaUJBQWlCLFNBQVMsS0FDdEMrRyxFQUE0QixZQUFFbkQsa0JBQzlCZ0gsRUFBYXJHLE1BQU0sSUFHckJQLEVBQW1CaEUsaUJBQWlCLFNBQVMsS0FDM0MrRyxFQUE2QixhQUFFbkQsa0JBQy9CdUgsRUFBWTVHLE1BQU0sRyIsInNvdXJjZXMiOlsid2VicGFjazovL3ByYWN0aWN1bS8uL3NyYy9jb21wb25lbnRzL0NhcmQuanMiLCJ3ZWJwYWNrOi8vcHJhY3RpY3VtLy4vc3JjL2NvbXBvbmVudHMvRm9ybVZhbGlkYXRvci5qcyIsIndlYnBhY2s6Ly9wcmFjdGljdW0vLi9zcmMvdXRpbHMvdXRpbHMuanMiLCJ3ZWJwYWNrOi8vcHJhY3RpY3VtLy4vc3JjL2NvbXBvbmVudHMvUG9wdXAuanMiLCJ3ZWJwYWNrOi8vcHJhY3RpY3VtLy4vc3JjL2NvbXBvbmVudHMvUG9wdXBXaXRoRm9ybS5qcyIsIndlYnBhY2s6Ly9wcmFjdGljdW0vLi9zcmMvY29tcG9uZW50cy9Vc2VySW5mby5qcyIsIndlYnBhY2s6Ly9wcmFjdGljdW0vLi9zcmMvY29tcG9uZW50cy9TZWN0aW9uLmpzIiwid2VicGFjazovL3ByYWN0aWN1bS8uL3NyYy9wYWdlcy9pbmRleC5qcyIsIndlYnBhY2s6Ly9wcmFjdGljdW0vLi9zcmMvY29tcG9uZW50cy9BcGkuanMiLCJ3ZWJwYWNrOi8vcHJhY3RpY3VtLy4vc3JjL2NvbXBvbmVudHMvUG9wdXBXaXRoSW1hZ2UuanMiLCJ3ZWJwYWNrOi8vcHJhY3RpY3VtLy4vc3JjL2NvbXBvbmVudHMvUG9wdXBDb25maXJtYXRpb24uanMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgYXBpIH0gZnJvbSBcIi4uL3BhZ2VzL2luZGV4LmpzXCI7XHJcbmltcG9ydCB7IGRlbGV0ZUNvbmZpcm1Qb3B1cCB9IGZyb20gXCIuLi9wYWdlcy9pbmRleC5qc1wiO1xyXG5cclxuY2xhc3MgQ2FyZCB7XHJcbiAgY29uc3RydWN0b3IoXHJcbiAgICBkYXRhLFxyXG4gICAgY2FyZFNlbGVjdG9yLFxyXG4gICAgaGFuZGxlSW1hZ2VDbGljayxcclxuICAgIGhhbmRsZURlbGV0ZUNsaWNrLFxyXG4gICAgaGFuZGxlTGlrZURpc2xpa2VDbGlja1xyXG4gICkge1xyXG4gICAgdGhpcy5fbmFtZSA9IGRhdGEubmFtZTtcclxuICAgIHRoaXMuX2xpbmsgPSBkYXRhLmxpbms7XHJcbiAgICB0aGlzLl9pZCA9IGRhdGEuX2lkO1xyXG4gICAgdGhpcy5fbGlrZVN0YXR1cyA9IGRhdGEuaXNMaWtlZDtcclxuICAgIHRoaXMuX2NhcmRTZWxlY3RvciA9IGNhcmRTZWxlY3RvcjtcclxuICAgIHRoaXMuX2hhbmRsZUltYWdlQ2xpY2sgPSBoYW5kbGVJbWFnZUNsaWNrO1xyXG4gICAgdGhpcy5faGFuZGxlRGVsZXRlQ2xpY2sgPSBoYW5kbGVEZWxldGVDbGljaztcclxuICAgIHRoaXMuX2hhbmRsZUxpa2VEaXNsaWtlID0gaGFuZGxlTGlrZURpc2xpa2VDbGljaztcclxuICB9XHJcblxyXG4gIF9zZXRFdmVudExpc3RlbmVycygpIHtcclxuICAgIHRoaXMuX2NhcmRJbWFnZUVsZW1lbnQuYWRkRXZlbnRMaXN0ZW5lcihcImNsaWNrXCIsICgpID0+XHJcbiAgICAgIHRoaXMuX2hhbmRsZUltYWdlQ2xpY2sodGhpcylcclxuICAgICk7XHJcblxyXG4gICAgdGhpcy5fbGlrZUljb24uYWRkRXZlbnRMaXN0ZW5lcihcImNsaWNrXCIsICgpID0+XHJcbiAgICAgIHRoaXMuX2hhbmRsZUxpa2VEaXNsaWtlKHRoaXMuX2xpa2VTdGF0dXMsIHRoaXMuX2lkKVxyXG4gICAgKTtcclxuXHJcbiAgICB0aGlzLl90cmFzaEljb24uYWRkRXZlbnRMaXN0ZW5lcihcImNsaWNrXCIsICgpID0+IHtcclxuICAgICAgdGhpcy5faGFuZGxlRGVsZXRlQ2xpY2sodGhpcy5faWQpO1xyXG4gICAgfSk7XHJcbiAgfVxyXG5cclxuICBfaGFuZGxlTGlrZUljb24oKSB7XHJcbiAgICB0aGlzLl9saWtlSWNvbi5jbGFzc0xpc3QudG9nZ2xlKFwiY2FyZF9fbGlrZS1idXR0b25fYWN0aXZlXCIpO1xyXG4gIH1cclxuXHJcbiAgaGFuZGxlRGVsZXRlQ2FyZCgpIHtcclxuICAgIHRoaXMuX2NhcmRFbGVtZW50LnJlbW92ZSgpO1xyXG4gICAgLy8gdGhpcy5fY2FyZEVsZW1lbnQgPSBudWxsO1xyXG4gIH1cclxuXHJcbiAgX2dldFRlbXBsYXRlKCkge1xyXG4gICAgdGhpcy5fY2FyZEVsZW1lbnQgPSBkb2N1bWVudFxyXG4gICAgICAucXVlcnlTZWxlY3Rvcih0aGlzLl9jYXJkU2VsZWN0b3IpXHJcbiAgICAgIC5jb250ZW50LnF1ZXJ5U2VsZWN0b3IoXCIuY2FyZFwiKVxyXG4gICAgICAuY2xvbmVOb2RlKHRydWUpO1xyXG5cclxuICAgIHJldHVybiB0aGlzLl9jYXJkRWxlbWVudDtcclxuICB9XHJcblxyXG4gIGdldFZpZXcoKSB7XHJcbiAgICB0aGlzLl9lbGVtZW50ID0gdGhpcy5fZ2V0VGVtcGxhdGUoKTtcclxuICAgIHRoaXMuX2NhcmRUaXRsZUVsZW1lbnQgPSB0aGlzLl9jYXJkRWxlbWVudC5xdWVyeVNlbGVjdG9yKFwiLmNhcmRfX3RpdGxlXCIpO1xyXG4gICAgdGhpcy5fY2FyZFRpdGxlRWxlbWVudC50ZXh0Q29udGVudCA9IHRoaXMuX25hbWU7XHJcbiAgICB0aGlzLl9jYXJkSW1hZ2VFbGVtZW50ID0gdGhpcy5fY2FyZEVsZW1lbnQucXVlcnlTZWxlY3RvcihcIi5jYXJkX19pbWFnZVwiKTtcclxuICAgIHRoaXMuX2NhcmRJbWFnZUVsZW1lbnQuc3JjID0gdGhpcy5fbGluaztcclxuICAgIHRoaXMuX2NhcmRJbWFnZUVsZW1lbnQuYWx0ID0gdGhpcy5fbmFtZTtcclxuICAgIHRoaXMuX2xpa2VJY29uID0gdGhpcy5fY2FyZEVsZW1lbnQucXVlcnlTZWxlY3RvcihcIi5jYXJkX19saWtlLWJ1dHRvblwiKTtcclxuICAgIGlmICh0aGlzLl9saWtlU3RhdHVzKVxyXG4gICAgICB0aGlzLl9saWtlSWNvbi5jbGFzc0xpc3QuYWRkKFwiY2FyZF9fbGlrZS1idXR0b25fYWN0aXZlXCIpO1xyXG4gICAgdGhpcy5fdHJhc2hJY29uID0gdGhpcy5fY2FyZEVsZW1lbnQucXVlcnlTZWxlY3RvcihcIi5jYXJkX190cmFzaC1idXR0b25cIik7XHJcbiAgICB0aGlzLl9kZWxldGVNb2RhbCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCJtb2RhbF9fZGVsZXRlLW1vZGFsX2FjdGl2ZVwiKTtcclxuXHJcbiAgICB0aGlzLl9zZXRFdmVudExpc3RlbmVycygpO1xyXG5cclxuICAgIHJldHVybiB0aGlzLl9lbGVtZW50O1xyXG4gIH1cclxufVxyXG5cclxuZXhwb3J0IGRlZmF1bHQgQ2FyZDtcclxuIiwiY2xhc3MgRm9ybVZhbGlkYXRvciB7XHJcbiAgY29uc3RydWN0b3Ioc2V0dGluZ3MsIGZvcm1FbCkge1xyXG4gICAgdGhpcy5fZm9ybVNlbGVjdG9yID0gc2V0dGluZ3MuZm9ybVNlbGVjdG9yO1xyXG4gICAgdGhpcy5faW5wdXRTZWxlY3RvciA9IHNldHRpbmdzLmlucHV0U2VsZWN0b3I7XHJcbiAgICB0aGlzLl9zdWJtaXRCdXR0b25TZWxlY3RvciA9IHNldHRpbmdzLnN1Ym1pdEJ1dHRvblNlbGVjdG9yO1xyXG4gICAgdGhpcy5faW5hY3RpdmVCdXR0b25DbGFzcyA9IHNldHRpbmdzLmluYWN0aXZlQnV0dG9uQ2xhc3M7XHJcbiAgICB0aGlzLl9pbnB1dEVycm9yQ2xhc3MgPSBzZXR0aW5ncy5pbnB1dEVycm9yQ2xhc3M7XHJcbiAgICB0aGlzLl9lcnJvckNsYXNzID0gc2V0dGluZ3MuZXJyb3JDbGFzcztcclxuICAgIHRoaXMuX2Zvcm1FbCA9IGZvcm1FbDtcclxuICAgIHRoaXMuX2lucHV0TGlzdCA9IFsuLi50aGlzLl9mb3JtRWwucXVlcnlTZWxlY3RvckFsbCh0aGlzLl9pbnB1dFNlbGVjdG9yKV07XHJcbiAgICB0aGlzLl9zdWJtaXRCdXR0b24gPSB0aGlzLl9mb3JtRWwucXVlcnlTZWxlY3Rvcih0aGlzLl9zdWJtaXRCdXR0b25TZWxlY3Rvcik7XHJcbiAgfVxyXG5cclxuICBfc2V0RXZlbnRMaXN0ZW5lcnMoKSB7XHJcbiAgICB0aGlzLl9pbnB1dExpc3QuZm9yRWFjaCgoaW5wdXRFbCkgPT4ge1xyXG4gICAgICBpbnB1dEVsLmFkZEV2ZW50TGlzdGVuZXIoXCJpbnB1dFwiLCAoKSA9PiB7XHJcbiAgICAgICAgdGhpcy5faW5wdXRFbCA9IGlucHV0RWw7XHJcbiAgICAgICAgdGhpcy5fY2hlY2tJbnB1dFZhbGlkaXR5KGlucHV0RWwpO1xyXG4gICAgICAgIHRoaXMuX3RvZ2dsZUJ1dHRvblN0YXRlKCk7XHJcbiAgICAgIH0pO1xyXG4gICAgfSk7XHJcbiAgfVxyXG5cclxuICBfc2hvd0lucHV0RXJyb3IoKSB7XHJcbiAgICB0aGlzLl9lcnJvck1lc3NhZ2VFbCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoYCMke3RoaXMuX2lucHV0RWwuaWR9LWVycm9yYCk7XHJcbiAgICB0aGlzLl9lcnJvck1lc3NhZ2VFbC50ZXh0Q29udGVudCA9IHRoaXMuX2lucHV0RWwudmFsaWRhdGlvbk1lc3NhZ2U7XHJcbiAgICB0aGlzLl9pbnB1dEVsLmNsYXNzTGlzdC5hZGQodGhpcy5faW5wdXRFcnJvckNsYXNzKTtcclxuICAgIHRoaXMuX2Vycm9yTWVzc2FnZUVsLmNsYXNzTGlzdC5hZGQodGhpcy5fZXJyb3JDbGFzcyk7XHJcbiAgfVxyXG5cclxuICBfY2hlY2tJbnB1dFZhbGlkaXR5KCkge1xyXG4gICAgaWYgKCF0aGlzLl9pbnB1dEVsLnZhbGlkaXR5LnZhbGlkKSB7XHJcbiAgICAgIHJldHVybiB0aGlzLl9zaG93SW5wdXRFcnJvcigpO1xyXG4gICAgfVxyXG4gICAgdGhpcy5faGlkZUlucHV0RXJyb3IoKTtcclxuICB9XHJcblxyXG4gIF9oaWRlSW5wdXRFcnJvcigpIHtcclxuICAgIHRoaXMuX2Vycm9yTWVzc2FnZUVsID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihgIyR7dGhpcy5faW5wdXRFbC5pZH0tZXJyb3JgKTtcclxuICAgIHRoaXMuX2Vycm9yTWVzc2FnZUVsLnRleHRDb250ZW50ID0gXCJcIjtcclxuICAgIHRoaXMuX2lucHV0RWwuY2xhc3NMaXN0LnJlbW92ZSh0aGlzLl9pbnB1dEVycm9yQ2xhc3MpO1xyXG4gICAgdGhpcy5fZXJyb3JNZXNzYWdlRWwuY2xhc3NMaXN0LnJlbW92ZSh0aGlzLl9lcnJvckNsYXNzKTtcclxuICB9XHJcblxyXG4gIF90b2dnbGVCdXR0b25TdGF0ZSgpIHtcclxuICAgIGlmICh0aGlzLl9oYXNJbnZhbGlkSW5wdXQodGhpcy5faW5wdXRMaXN0KSkge1xyXG4gICAgICB0aGlzLl9lbmFibGVCdXR0b24odGhpcy5faW5hY3RpdmVCdXR0b25DbGFzcyk7XHJcbiAgICAgIHJldHVybjtcclxuICAgIH1cclxuICAgIHRoaXMuX2Rpc2FibGVCdXR0b24odGhpcy5faW5hY3RpdmVCdXR0b25DbGFzcyk7XHJcbiAgfVxyXG5cclxuICBfaGFzSW52YWxpZElucHV0KCkge1xyXG4gICAgcmV0dXJuICF0aGlzLl9pbnB1dExpc3QuZXZlcnkoKGlucHV0RWwpID0+IGlucHV0RWwudmFsaWRpdHkudmFsaWQpO1xyXG4gIH1cclxuXHJcbiAgX2VuYWJsZUJ1dHRvbigpIHtcclxuICAgIHRoaXMuX3N1Ym1pdEJ1dHRvbi5jbGFzc0xpc3QuYWRkKHRoaXMuX2luYWN0aXZlQnV0dG9uQ2xhc3MpO1xyXG4gICAgdGhpcy5fc3VibWl0QnV0dG9uLmRpc2FibGVkID0gdHJ1ZTtcclxuICB9XHJcblxyXG4gIF9kaXNhYmxlQnV0dG9uKCkge1xyXG4gICAgdGhpcy5fc3VibWl0QnV0dG9uLmNsYXNzTGlzdC5yZW1vdmUodGhpcy5faW5hY3RpdmVCdXR0b25DbGFzcyk7XHJcbiAgICB0aGlzLl9zdWJtaXRCdXR0b24uZGlzYWJsZWQgPSBmYWxzZTtcclxuICB9XHJcblxyXG4gIGVuYWJsZVZhbGlkYXRpb24oKSB7XHJcbiAgICB0aGlzLl9mb3JtRWwuYWRkRXZlbnRMaXN0ZW5lcihcInN1Ym1pdFwiLCAoZSkgPT4ge1xyXG4gICAgICBlLnByZXZlbnREZWZhdWx0KCk7XHJcbiAgICB9KTtcclxuXHJcbiAgICB0aGlzLl9zZXRFdmVudExpc3RlbmVycygpO1xyXG4gIH1cclxuICByZXNldFZhbGlkYXRpb24oKSB7XHJcbiAgICB0aGlzLl90b2dnbGVCdXR0b25TdGF0ZSgpO1xyXG5cclxuICAgIHRoaXMuX2lucHV0TGlzdC5mb3JFYWNoKChpbnB1dEVsKSA9PiB7XHJcbiAgICAgIHRoaXMuX2lucHV0RWwgPSBpbnB1dEVsO1xyXG4gICAgICB0aGlzLl9oaWRlSW5wdXRFcnJvcigpO1xyXG4gICAgfSk7XHJcbiAgfVxyXG59XHJcblxyXG5leHBvcnQgZGVmYXVsdCBGb3JtVmFsaWRhdG9yO1xyXG4iLCIvLyBDQVJEIERBVEFcclxuXHJcbi8vIGV4cG9ydCBjb25zdCBpbml0aWFsQ2FyZHMgPSBbXHJcbi8vICAge1xyXG4vLyAgICAgbmFtZTogXCJZb3NlbWl0ZSBWYWxsZXlcIixcclxuLy8gICAgIGxpbms6IFwiaHR0cHM6Ly9wcmFjdGljdW0tY29udGVudC5zMy51cy13ZXN0LTEuYW1hem9uYXdzLmNvbS9zb2Z0d2FyZS1lbmdpbmVlci9hcm91bmQtcHJvamVjdC95b3NlbWl0ZS5qcGdcIixcclxuLy8gICB9LFxyXG4vLyAgIHtcclxuLy8gICAgIG5hbWU6IFwiTGFrZSBMb3Vpc2VcIixcclxuLy8gICAgIGxpbms6IFwiaHR0cHM6Ly9wcmFjdGljdW0tY29udGVudC5zMy51cy13ZXN0LTEuYW1hem9uYXdzLmNvbS9zb2Z0d2FyZS1lbmdpbmVlci9hcm91bmQtcHJvamVjdC9sYWtlLWxvdWlzZS5qcGdcIixcclxuLy8gICB9LFxyXG4vLyAgIHtcclxuLy8gICAgIG5hbWU6IFwiQmFsZCBNb3VudGFpbnNcIixcclxuLy8gICAgIGxpbms6IFwiaHR0cHM6Ly9wcmFjdGljdW0tY29udGVudC5zMy51cy13ZXN0LTEuYW1hem9uYXdzLmNvbS9zb2Z0d2FyZS1lbmdpbmVlci9hcm91bmQtcHJvamVjdC9iYWxkLW1vdW50YWlucy5qcGdcIixcclxuLy8gICB9LFxyXG4vLyAgIHtcclxuLy8gICAgIG5hbWU6IFwiTGF0ZW1hclwiLFxyXG4vLyAgICAgbGluazogXCJodHRwczovL3ByYWN0aWN1bS1jb250ZW50LnMzLnVzLXdlc3QtMS5hbWF6b25hd3MuY29tL3NvZnR3YXJlLWVuZ2luZWVyL2Fyb3VuZC1wcm9qZWN0L2xhdGVtYXIuanBnXCIsXHJcbi8vICAgfSxcclxuLy8gICB7XHJcbi8vICAgICBuYW1lOiBcIlZhbm9pc2UgTmF0aW9uYWwgUGFya1wiLFxyXG4vLyAgICAgbGluazogXCJodHRwczovL3ByYWN0aWN1bS1jb250ZW50LnMzLnVzLXdlc3QtMS5hbWF6b25hd3MuY29tL3NvZnR3YXJlLWVuZ2luZWVyL2Fyb3VuZC1wcm9qZWN0L3Zhbm9pc2UuanBnXCIsXHJcbi8vICAgfSxcclxuLy8gICB7XHJcbi8vICAgICBuYW1lOiBcIkxhZ28gZGkgQnJhaWVzXCIsXHJcbi8vICAgICBsaW5rOiBcImh0dHBzOi8vcHJhY3RpY3VtLWNvbnRlbnQuczMudXMtd2VzdC0xLmFtYXpvbmF3cy5jb20vc29mdHdhcmUtZW5naW5lZXIvYXJvdW5kLXByb2plY3QvbGFnby5qcGdcIixcclxuLy8gICB9LFxyXG4vLyBdO1xyXG5cclxuLy8gUFJPRklMRSBFTEVNRU5UU1xyXG5cclxuZXhwb3J0IGNvbnN0IHByb2ZpbGVFZGl0QnV0dG9uID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIiNwcm9maWxlLWVkaXQtYnV0dG9uXCIpO1xyXG5leHBvcnQgY29uc3QgcHJvZmlsZU5hbWVJbnB1dCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIjbW9kYWwtbmFtZS1pbnB1dFwiKTtcclxuZXhwb3J0IGNvbnN0IHByb2ZpbGVBYm91dElucHV0ID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIiNtb2RhbC1hYm91dC1pbnB1dFwiKTtcclxuZXhwb3J0IGNvbnN0IGF2YXRhclVwZGF0ZUJ1dHRvbiA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXHJcbiAgXCIucHJvZmlsZV9fYXZhdGFyLWVkaXRcIlxyXG4pO1xyXG5cclxuLy9DQVJEIEVMRU1FTlRTXHJcblxyXG5leHBvcnQgY29uc3QgY2FyZEFkZEJ1dHRvbiA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIjY2FyZC1hZGQtYnV0dG9uXCIpO1xyXG5leHBvcnQgY29uc3QgY2FyZExpc3RFbGVtZW50ID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIi5jYXJkc19fbGlzdFwiKTtcclxuZXhwb3J0IGNvbnN0IGNhcmREZWxldGVDb25maXJtQnV0dG9uID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIiNtb2RhbC1kZWwtYnRuXCIpO1xyXG5cclxuLy8gU0VMRUNUT1JTXHJcblxyXG5leHBvcnQgY29uc3QgY29uZmlnID0ge1xyXG4gIGZvcm1TZWxlY3RvcjogXCIubW9kYWxfX2Zvcm1cIixcclxuICBpbnB1dFNlbGVjdG9yOiBcIi5tb2RhbF9faW5wdXRcIixcclxuICBzdWJtaXRCdXR0b25TZWxlY3RvcjogXCIubW9kYWxfX3NhdmUtYnV0dG9uXCIsXHJcbiAgaW5hY3RpdmVCdXR0b25DbGFzczogXCJtb2RhbF9fYnV0dG9uLWRpc2FibGVkXCIsXHJcbiAgaW5wdXRFcnJvckNsYXNzOiBcIm1vZGFsX19pbnB1dF90eXBlX2Vycm9yXCIsXHJcbiAgZXJyb3JDbGFzczogXCJtb2RhbF9faW5wdXQtZXJyb3JfdmlzaWJsZVwiLFxyXG59O1xyXG4iLCJjbGFzcyBQb3B1cCB7XHJcbiAgY29uc3RydWN0b3IoeyBwb3B1cFNlbGVjdG9yIH0pIHtcclxuICAgIHRoaXMuX21vZGFsRWwgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKHBvcHVwU2VsZWN0b3IpO1xyXG4gIH1cclxuXHJcbiAgb3BlbigpIHtcclxuICAgIHRoaXMuX21vZGFsRWwuY2xhc3NMaXN0LmFkZChcIm1vZGFsX29wZW5lZFwiKTtcclxuICAgIGRvY3VtZW50LmFkZEV2ZW50TGlzdGVuZXIoXCJrZXl1cFwiLCB0aGlzLl9oYW5kbGVFc2MpO1xyXG4gIH1cclxuXHJcbiAgY2xvc2UoKSB7XHJcbiAgICB0aGlzLl9tb2RhbEVsLmNsYXNzTGlzdC5yZW1vdmUoXCJtb2RhbF9vcGVuZWRcIik7XHJcbiAgICBkb2N1bWVudC5yZW1vdmVFdmVudExpc3RlbmVyKFwia2V5dXBcIiwgdGhpcy5faGFuZGxlRXNjKTtcclxuICB9XHJcblxyXG4gIF9oYW5kbGVFc2MgPSAoZSkgPT4ge1xyXG4gICAgaWYgKGUua2V5ID09PSBcIkVzY2FwZVwiKSB0aGlzLmNsb3NlKCk7XHJcbiAgfTtcclxuXHJcbiAgc2V0RXZlbnRMaXN0ZW5lcnMoKSB7XHJcbiAgICB0aGlzLl9tb2RhbEVsLmFkZEV2ZW50TGlzdGVuZXIoXCJtb3VzZWRvd25cIiwgKGUpID0+IHtcclxuICAgICAgaWYgKGUudGFyZ2V0LmNsYXNzTGlzdC5jb250YWlucyhcIm1vZGFsX29wZW5lZFwiKSkge1xyXG4gICAgICAgIHRoaXMuY2xvc2UoKTtcclxuICAgICAgfVxyXG4gICAgICBpZiAoZS50YXJnZXQuY2xhc3NMaXN0LmNvbnRhaW5zKFwibW9kYWxfX2Nsb3NlXCIpKSB7XHJcbiAgICAgICAgdGhpcy5jbG9zZSgpO1xyXG4gICAgICB9XHJcbiAgICB9KTtcclxuICB9XHJcbn1cclxuXHJcbmV4cG9ydCBkZWZhdWx0IFBvcHVwO1xyXG4iLCJpbXBvcnQgUG9wdXAgZnJvbSBcIi4vUG9wdXAuanNcIjtcclxuXHJcbmNsYXNzIFBvcHVwV2l0aEZvcm0gZXh0ZW5kcyBQb3B1cCB7XHJcbiAgY29uc3RydWN0b3IocG9wdXBTZWxlY3RvciwgaGFuZGxlRm9ybVN1Ym1pdCkge1xyXG4gICAgc3VwZXIoeyBwb3B1cFNlbGVjdG9yIH0pO1xyXG4gICAgdGhpcy5fcG9wdXBGb3JtID0gdGhpcy5fbW9kYWxFbC5xdWVyeVNlbGVjdG9yKFwiLm1vZGFsX19mb3JtXCIpO1xyXG4gICAgdGhpcy5fc3VibWl0QnV0dG9uID0gdGhpcy5fbW9kYWxFbC5xdWVyeVNlbGVjdG9yKFwiLm1vZGFsX19zYXZlLWJ1dHRvblwiKTtcclxuICAgIHRoaXMuX2hhbmRsZUZvcm1TdWJtaXQgPSBoYW5kbGVGb3JtU3VibWl0O1xyXG4gICAgdGhpcy5fbGlzdCA9IFsuLi50aGlzLl9wb3B1cEZvcm0ucXVlcnlTZWxlY3RvckFsbChcIi5tb2RhbF9faW5wdXRcIildO1xyXG4gIH1cclxuXHJcbiAgc2V0U2F2ZSgpIHtcclxuICAgIHRoaXMuX3N1Ym1pdEJ1dHRvbi50ZXh0Q29udGVudCA9IFwiU2F2ZVwiO1xyXG4gIH1cclxuXHJcbiAgY2xvc2UoKSB7XHJcbiAgICB0aGlzLl9wb3B1cEZvcm0ucmVzZXQoKTtcclxuICAgIHN1cGVyLmNsb3NlKCk7XHJcbiAgfVxyXG5cclxuICBzZXRMb2FkaW5nKGxvYWRpbmcpIHtcclxuICAgIGlmIChsb2FkaW5nKSB7XHJcbiAgICAgIHRoaXMuX3N1Ym1pdEJ1dHRvbi50ZXh0Q29udGVudCA9IFwiU2F2aW5nLi4uXCI7XHJcbiAgICB9XHJcbiAgfVxyXG5cclxuICBfZ2V0SW5wdXRWYWx1ZXMoKSB7XHJcbiAgICBjb25zdCBpbnB1dERhdGEgPSB7fTtcclxuICAgIHRoaXMuX2xpc3QuZm9yRWFjaCgoaW5wdXQpID0+IHtcclxuICAgICAgaW5wdXREYXRhW2lucHV0Lm5hbWVdID0gaW5wdXQudmFsdWU7XHJcbiAgICB9KTtcclxuXHJcbiAgICByZXR1cm4gaW5wdXREYXRhO1xyXG4gIH1cclxuXHJcbiAgc2V0RXZlbnRMaXN0ZW5lcnMoKSB7XHJcbiAgICB0aGlzLl9wb3B1cEZvcm0uYWRkRXZlbnRMaXN0ZW5lcihcInN1Ym1pdFwiLCAoKSA9PiB7XHJcbiAgICAgIHRoaXMuX2hhbmRsZUZvcm1TdWJtaXQodGhpcy5fZ2V0SW5wdXRWYWx1ZXMoKSk7XHJcbiAgICB9KTtcclxuICAgIHN1cGVyLnNldEV2ZW50TGlzdGVuZXJzKCk7XHJcbiAgfVxyXG59XHJcblxyXG5leHBvcnQgZGVmYXVsdCBQb3B1cFdpdGhGb3JtO1xyXG4iLCJjbGFzcyBVc2VySW5mbyB7XHJcbiAgY29uc3RydWN0b3IodXNlckRhdGEpIHtcclxuICAgIHRoaXMuX25hbWUgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiLnByb2ZpbGVfX25hbWVcIik7XHJcbiAgICB0aGlzLl9uYW1lLnRleHRDb250ZW50ID0gdXNlckRhdGEubmFtZTtcclxuICAgIHRoaXMuX2Fib3V0ID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIi5wcm9maWxlX19hYm91dFwiKTtcclxuICAgIHRoaXMuX2Fib3V0LnRleHRDb250ZW50ID0gdXNlckRhdGEuYWJvdXQ7XHJcbiAgICB0aGlzLl9hdmF0YXIgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiLnByb2ZpbGVfX2ltYWdlXCIpO1xyXG4gICAgdGhpcy5fYXZhdGFyLnNyYyA9IHVzZXJEYXRhLmF2YXRhcjtcclxuICB9XHJcblxyXG4gIGdldFVzZXJJbmZvKCkge31cclxuXHJcbiAgc2V0VXNlckF2YXRhcihsaW5rKSB7XHJcbiAgICB0aGlzLl9hdmF0YXIuc3JjID0gbGluaztcclxuICB9XHJcblxyXG4gIHNldFVzZXJJbmZvKHsgbmFtZSwgYWJvdXQgfSkge1xyXG4gICAgdGhpcy5fbmFtZS50ZXh0Q29udGVudCA9IG5hbWU7XHJcbiAgICB0aGlzLl9hYm91dC50ZXh0Q29udGVudCA9IGFib3V0O1xyXG4gIH1cclxufVxyXG5cclxuZXhwb3J0IGRlZmF1bHQgVXNlckluZm87XHJcbiIsImNsYXNzIFNlY3Rpb24ge1xyXG4gIGNvbnN0cnVjdG9yKHsgZGF0YSwgcmVuZGVyZXIgfSwgY29udGFpbmVyKSB7XHJcbiAgICB0aGlzLl9pdGVtcyA9IGRhdGE7XHJcbiAgICB0aGlzLl9yZW5kZXJlciA9IHJlbmRlcmVyO1xyXG4gICAgdGhpcy5fY29udGFpbmVyID0gY29udGFpbmVyO1xyXG4gIH1cclxuXHJcbiAgcmVuZGVySXRlbXMoKSB7XHJcbiAgICB0aGlzLl9pdGVtcy5mb3JFYWNoKChpdGVtKSA9PiB7XHJcbiAgICAgIHRoaXMuX3JlbmRlcmVyKGl0ZW0pO1xyXG4gICAgfSk7XHJcbiAgfVxyXG5cclxuICBhZGRJdGVtKGVsZW1lbnQpIHtcclxuICAgIHRoaXMuX2NvbnRhaW5lci5wcmVwZW5kKGVsZW1lbnQpO1xyXG4gIH1cclxufVxyXG5cclxuZXhwb3J0IGRlZmF1bHQgU2VjdGlvbjtcclxuIiwiaW1wb3J0IENhcmQgZnJvbSBcIi4uL2NvbXBvbmVudHMvQ2FyZC5qc1wiO1xyXG5pbXBvcnQgRm9ybVZhbGlkYXRvciBmcm9tIFwiLi4vY29tcG9uZW50cy9Gb3JtVmFsaWRhdG9yLmpzXCI7XHJcbmltcG9ydCBQb3B1cENvbmZpcm1hdGlvbiBmcm9tIFwiLi4vY29tcG9uZW50cy9Qb3B1cENvbmZpcm1hdGlvbi5qc1wiO1xyXG5pbXBvcnQgUG9wdXBXaXRoRm9ybSBmcm9tIFwiLi4vY29tcG9uZW50cy9Qb3B1cFdpdGhGb3JtLmpzXCI7XHJcbmltcG9ydCBQb3B1cFdpdGhJbWFnZXMgZnJvbSBcIi4uL2NvbXBvbmVudHMvUG9wdXBXaXRoSW1hZ2UuanNcIjtcclxuaW1wb3J0IFVzZXJJbmZvIGZyb20gXCIuLi9jb21wb25lbnRzL1VzZXJJbmZvLmpzXCI7XHJcbmltcG9ydCBBcGkgZnJvbSBcIi4uL2NvbXBvbmVudHMvQXBpLmpzXCI7XHJcbmltcG9ydCBcIi4uL3BhZ2VzL2luZGV4LmNzc1wiO1xyXG5pbXBvcnQge1xyXG4gIGNhcmRBZGRCdXR0b24sXHJcbiAgYXZhdGFyVXBkYXRlQnV0dG9uLFxyXG4gIHByb2ZpbGVFZGl0QnV0dG9uLFxyXG4gIHByb2ZpbGVOYW1lSW5wdXQsXHJcbiAgcHJvZmlsZUFib3V0SW5wdXQsXHJcbiAgY2FyZExpc3RFbGVtZW50LFxyXG4gIGNvbmZpZyxcclxufSBmcm9tIFwiLi4vdXRpbHMvdXRpbHMuanNcIjtcclxuaW1wb3J0IFNlY3Rpb24gZnJvbSBcIi4uL2NvbXBvbmVudHMvU2VjdGlvbi5qc1wiO1xyXG5cclxuY29uc3QgZm9ybVZhbGlkYXRvcnMgPSB7fTtcclxuXHJcbmNvbnN0IGVuYWJsZVZhbGlkYXRpb24gPSAoY29uZmlnKSA9PiB7XHJcbiAgY29uc3QgZm9ybUxpc3QgPSBBcnJheS5mcm9tKGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3JBbGwoY29uZmlnLmZvcm1TZWxlY3RvcikpO1xyXG4gIGZvcm1MaXN0LmZvckVhY2goKGZvcm1FbGVtZW50KSA9PiB7XHJcbiAgICBjb25zdCB2YWxpZGF0b3IgPSBuZXcgRm9ybVZhbGlkYXRvcihjb25maWcsIGZvcm1FbGVtZW50KTtcclxuICAgIGNvbnN0IGZvcm1OYW1lID0gZm9ybUVsZW1lbnQuZ2V0QXR0cmlidXRlKFwibmFtZVwiKTtcclxuICAgIGZvcm1WYWxpZGF0b3JzW2Zvcm1OYW1lXSA9IHZhbGlkYXRvcjtcclxuICAgIHZhbGlkYXRvci5lbmFibGVWYWxpZGF0aW9uKCk7XHJcbiAgfSk7XHJcbn07XHJcblxyXG5lbmFibGVWYWxpZGF0aW9uKGNvbmZpZyk7XHJcblxyXG4vL1ZBUlxyXG5cclxubGV0IGNhcmRTZWN0aW9uO1xyXG5sZXQgaW5pdGlhbFVzZXJEYXRhO1xyXG5cclxuLy9BUElcclxuXHJcbmV4cG9ydCBjb25zdCBhcGkgPSBuZXcgQXBpKHtcclxuICBiYXNlVXJsOiBcImh0dHBzOi8vYXJvdW5kLWFwaS5lbi50cmlwbGV0ZW4tc2VydmljZXMuY29tL3YxXCIsXHJcbiAgYXV0aG9yaXphdGlvbjogXCI3ZGNkOWE5My0xNDljLTRlNTYtODdkYi05Mjg1YzkxNzdhOWVcIixcclxufSk7XHJcblxyXG5hcGlcclxuICAuZ2V0VXNlckRhdGEoKVxyXG4gIC50aGVuKChkYXRhKSA9PiB7XHJcbiAgICBpbml0aWFsVXNlckRhdGEgPSBuZXcgVXNlckluZm8oZGF0YSk7XHJcbiAgfSlcclxuICAuY2F0Y2goKGVycikgPT4gY29uc29sZS5lcnJvcihgJHtlcnJ9IFByb2ZpbGUgaW5mbyBtYXkgYmUgaW5jb3JyZWN0YCkpO1xyXG5cclxuYXBpXHJcbiAgLmdldEluaXRpYWxDYXJkcygpXHJcbiAgLnRoZW4oKGRhdGEpID0+IHtcclxuICAgIGNhcmRTZWN0aW9uID0gbmV3IFNlY3Rpb24oXHJcbiAgICAgIHtcclxuICAgICAgICBkYXRhOiBkYXRhLFxyXG4gICAgICAgIHJlbmRlcmVyOiAoZGF0YSkgPT4ge1xyXG4gICAgICAgICAgY29uc3QgY2FyZEVsZW1lbnQgPSBjcmVhdGVDYXJkKGRhdGEpO1xyXG4gICAgICAgICAgY2FyZFNlY3Rpb24uYWRkSXRlbShjYXJkRWxlbWVudCk7XHJcbiAgICAgICAgfSxcclxuICAgICAgfSxcclxuICAgICAgY2FyZExpc3RFbGVtZW50XHJcbiAgICApO1xyXG4gICAgY2FyZFNlY3Rpb24ucmVuZGVySXRlbXMoKTtcclxuICB9KVxyXG4gIC5jYXRjaCgoZXJyKSA9PiBjb25zb2xlLmVycm9yKGAke2Vycn0gQ2FyZHMgbWF5IGJlIG1pc3NpbmdgKSk7XHJcblxyXG5jb25zdCBjcmVhdGVDYXJkID0gKGNhcmRJdGVtKSA9PiB7XHJcbiAgY29uc3QgY2FyZCA9IG5ldyBDYXJkKFxyXG4gICAgY2FyZEl0ZW0sXHJcbiAgICBcIiNjYXJkLXRlbXBsYXRlXCIsXHJcbiAgICAoKSA9PiB7XHJcbiAgICAgIGltZ1BvcHVwLm9wZW4oY2FyZEl0ZW0pO1xyXG4gICAgfSxcclxuICAgICgpID0+IHtcclxuICAgICAgZGVsZXRlQ29uZmlybVBvcHVwLm9wZW4oY2FyZCk7XHJcbiAgICB9LFxyXG5cclxuICAgIChsaWtlU3RhdHVzLCBpZCkgPT4ge1xyXG4gICAgICBpZiAoIWxpa2VTdGF0dXMpIHtcclxuICAgICAgICBhcGlcclxuICAgICAgICAgIC5saWtlQ2FyZChpZClcclxuICAgICAgICAgIC50aGVuKCgpID0+IGNhcmQuX2hhbmRsZUxpa2VJY29uKCkpXHJcbiAgICAgICAgICAuY2F0Y2goKGVycikgPT4gY29uc29sZS5lcnJvcihgJHtlcnJ9LCBGYWlsZWQgdG8gbGlrZSBjYXJkYCkpO1xyXG4gICAgICB9IGVsc2Uge1xyXG4gICAgICAgIGFwaVxyXG4gICAgICAgICAgLmRpc0xpa2VDYXJkKGlkKVxyXG4gICAgICAgICAgLnRoZW4oKCkgPT4gY2FyZC5faGFuZGxlTGlrZUljb24oKSlcclxuICAgICAgICAgIC5jYXRjaCgoZXJyKSA9PiBjb25zb2xlLmVycm9yKGAke2Vycn0sIEZhaWxlZCB0byBkaXNsaWtlIGNhcmRgKSk7XHJcbiAgICAgIH1cclxuICAgIH1cclxuICApO1xyXG4gIHJldHVybiBjYXJkLmdldFZpZXcoKTtcclxufTtcclxuXHJcbi8vUG9wdXBzXHJcblxyXG5jb25zdCBpbWdQb3B1cCA9IG5ldyBQb3B1cFdpdGhJbWFnZXMoXCIjY2FyZC1waWN0dXJlLW1vZGFsXCIpO1xyXG5pbWdQb3B1cC5zZXRFdmVudExpc3RlbmVycygpO1xyXG5cclxuY29uc3QgcHJvZmlsZVBvcHVwID0gbmV3IFBvcHVwV2l0aEZvcm0oXHJcbiAgXCIjcHJvZmlsZS1lZGl0LW1vZGFsXCIsXHJcbiAgaGFuZGxlUHJvZmlsZVVwZGF0ZVxyXG4pO1xyXG5wcm9maWxlUG9wdXAuc2V0RXZlbnRMaXN0ZW5lcnMoKTtcclxuXHJcbmNvbnN0IG5ld0NhcmRQb3B1cCA9IG5ldyBQb3B1cFdpdGhGb3JtKFwiI2NhcmQtYWRkLW1vZGFsXCIsIGhhbmRsZUFkZENhcmQpO1xyXG5uZXdDYXJkUG9wdXAuc2V0RXZlbnRMaXN0ZW5lcnMoKTtcclxuXHJcbmV4cG9ydCBjb25zdCBkZWxldGVDb25maXJtUG9wdXAgPSBuZXcgUG9wdXBDb25maXJtYXRpb24oXHJcbiAgXCIjbW9kYWwtZGVsZXRlXCIsXHJcbiAgaGFuZGxlRGVsZXRlQ29uZmlybWF0aW9uXHJcbik7XHJcbmRlbGV0ZUNvbmZpcm1Qb3B1cC5zZXRFdmVudExpc3RlbmVycygpO1xyXG5cclxuY29uc3QgYXZhdGFyUG9wdXAgPSBuZXcgUG9wdXBXaXRoRm9ybShcIiNtb2RhbC1hdmF0YXJcIiwgaGFuZGxlVXBkYXRlQXZhdGFyKTtcclxuYXZhdGFyUG9wdXAuc2V0RXZlbnRMaXN0ZW5lcnMoKTtcclxuXHJcbi8vSEFORExFU1xyXG5cclxuLy8gZnVuY3Rpb24gaGFuZGxlU3VibWl0KHJlcXVlc3QsIHBvcHVwSW5zdGFuY2UsIGxvYWRpbmdUZXh0ID0gXCJTYXZpbmcuLi5cIikge1xyXG4vLyAgIHBvcHVwSW5zdGFuY2UucmVuZGVyTG9hZGluZyh0cnVlLCBsb2FkaW5nVGV4dCk7XHJcbi8vICAgcmVxdWVzdCgpXHJcbi8vICAgICAudGhlbigoKSA9PiB7XHJcbi8vICAgICAgIHBvcHVwSW5zdGFuY2UuY2xvc2UoKTtcclxuLy8gICAgIH0pXHJcbi8vICAgICAuY2F0Y2goY29uc29sZS5lcnJvcilcclxuLy8gICAgIC5maW5hbGx5KCgpID0+IHtcclxuLy8gICAgICAgcG9wdXBJbnN0YW5jZS5yZW5kZXJMb2FkaW5nKGZhbHNlKTtcclxuLy8gICAgIH0pO1xyXG4vLyB9XHJcblxyXG4vLyBmdW5jdGlvbiBoYW5kbGVQcm9maWxlRm9ybVN1Ym1pdChpbnB1dFZhbHVlcykge1xyXG4vLyAgICAgICAgIHdlIGNyZWF0ZSBhIGZ1bmN0aW9uIHRoYXQgcmV0dXJucyBhIHByb21pc2VcclxuLy8gICBmdW5jdGlvbiBtYWtlUmVxdWVzdCgpIHtcclxuLy8gICAgICAgIGByZXR1cm5gIGxldHMgdXMgdXNlIGEgcHJvbWlzZSBjaGFpbiBgdGhlbiwgY2F0Y2gsIGZpbmFsbHlgIGluc2lkZSBgaGFuZGxlU3VibWl0YFxyXG4vLyAgICAgcmV0dXJuIGFwaS5lZGl0UHJvZmlsZShpbnB1dFZhbHVlcykudGhlbigodXNlckRhdGEpID0+IHtcclxuLy8gICAgICAgdXNlckluZm8uc2V0VXNlckluZm8odXNlckRhdGEpXHJcbi8vICAgICB9KTtcclxuLy8gICB9XHJcbi8vICAgICAgICAgSGVyZSB3ZSBjYWxsIHRoZSBmdW5jdGlvbiBwYXNzaW5nIHRoZSByZXF1ZXN0LCBwb3B1cCBpbnN0YW5jZSBhbmQgaWYgd2UgbmVlZCBzb21lIG90aGVyIGxvYWRpbmcgdGV4dCB3ZSBjYW4gcGFzcyBpdCBhcyB0aGUgM3JkIGFyZ3VtZW50XHJcbi8vICAgaGFuZGxlU3VibWl0KG1ha2VSZXF1ZXN0LCBwcm9maWxlUG9wdXApO1xyXG4vLyB9XHJcblxyXG5mdW5jdGlvbiBoYW5kbGVEZWxldGVDb25maXJtYXRpb24oY2FyZCwgaWQpIHtcclxuICBhcGlcclxuICAgIC5kZWxldGVDYXJkKGlkKVxyXG4gICAgLnRoZW4oKCkgPT4ge1xyXG4gICAgICBjYXJkLmhhbmRsZURlbGV0ZUNhcmQoKTtcclxuICAgICAgZGVsZXRlQ29uZmlybVBvcHVwLmNsb3NlKCk7XHJcbiAgICB9KVxyXG4gICAgLmNhdGNoKChlcnIpID0+IGNvbnNvbGUuZXJyb3IoYCR7ZXJyfSwgRmFpbGVkIHRvIGRlbGV0ZSBjYXJkYCkpO1xyXG59XHJcblxyXG5mdW5jdGlvbiBoYW5kbGVQcm9maWxlVXBkYXRlKHVzZXJEYXRhKSB7XHJcbiAgcHJvZmlsZVBvcHVwLnNldExvYWRpbmcodHJ1ZSk7XHJcbiAgYXBpXHJcbiAgICAudXBkYXRlVXNlckRhdGEodXNlckRhdGEpXHJcbiAgICAudGhlbigoKSA9PiB7XHJcbiAgICAgIGluaXRpYWxVc2VyRGF0YS5zZXRVc2VySW5mbyh1c2VyRGF0YSk7XHJcbiAgICAgIHByb2ZpbGVQb3B1cC5jbG9zZSgpO1xyXG4gICAgfSlcclxuICAgIC5jYXRjaCgoZXJyKSA9PiBjb25zb2xlLmVycm9yKGAke2Vycn0sIEZhaWxlZCB0byB1cGRhdGUgUHJvZmlsZSBJbmZvYCkpXHJcbiAgICAuZmluYWxseSgoKSA9PiB7XHJcbiAgICAgIHByb2ZpbGVQb3B1cC5zZXRMb2FkaW5nKGZhbHNlKTtcclxuICAgICAgcHJvZmlsZVBvcHVwLnNldFNhdmUoKTtcclxuICAgIH0pO1xyXG59XHJcblxyXG5mdW5jdGlvbiBoYW5kbGVBZGRDYXJkKGNhcmREYXRhKSB7XHJcbiAgbmV3Q2FyZFBvcHVwLnNldExvYWRpbmcodHJ1ZSk7XHJcbiAgYXBpXHJcbiAgICAuY3JlYXRlQ2FyZChjYXJkRGF0YSlcclxuICAgIC50aGVuKChkYXRhKSA9PiB7XHJcbiAgICAgIGNvbnN0IGNhcmRGb3JtRWxlbWVudCA9IGNyZWF0ZUNhcmQoZGF0YSk7XHJcbiAgICAgIGNhcmRTZWN0aW9uLmFkZEl0ZW0oY2FyZEZvcm1FbGVtZW50KTtcclxuICAgICAgbmV3Q2FyZFBvcHVwLmNsb3NlKCk7XHJcbiAgICB9KVxyXG4gICAgLmNhdGNoKChlcnIpID0+IGNvbnNvbGUuZXJyb3IoYCR7ZXJyfSwgRmFpbGVkIHRvIGFkZCBDYXJkYCkpXHJcbiAgICAuZmluYWxseSgoKSA9PiB7XHJcbiAgICAgIG5ld0NhcmRQb3B1cC5zZXRMb2FkaW5nKGZhbHNlKTtcclxuICAgICAgbmV3Q2FyZFBvcHVwLnNldFNhdmUoKTtcclxuICAgIH0pO1xyXG59XHJcblxyXG5mdW5jdGlvbiBoYW5kbGVVcGRhdGVBdmF0YXIoaW5wdXQpIHtcclxuICBhdmF0YXJQb3B1cC5zZXRMb2FkaW5nKHRydWUpO1xyXG4gIGFwaVxyXG4gICAgLnVwZGF0ZUF2YXRhcihpbnB1dC5saW5rKVxyXG4gICAgLnRoZW4oKCkgPT4ge1xyXG4gICAgICBpbml0aWFsVXNlckRhdGEuc2V0VXNlckF2YXRhcihpbnB1dC5saW5rKTtcclxuICAgICAgYXZhdGFyUG9wdXAuY2xvc2UoKTtcclxuICAgIH0pXHJcbiAgICAuY2F0Y2goKGVycikgPT4gY29uc29sZS5lcnJvcihgJHtlcnJ9LCBGYWlsZWQgdG8gdXBkYXRlIEF2YXRhcmApKVxyXG4gICAgLmZpbmFsbHkoKCkgPT4ge1xyXG4gICAgICBhdmF0YXJQb3B1cC5zZXRMb2FkaW5nKGZhbHNlKTtcclxuICAgICAgYXZhdGFyUG9wdXAuc2V0U2F2ZSgpO1xyXG4gICAgfSk7XHJcbn1cclxuXHJcbi8vRVZFTlQgTElTVEVORVJcclxuXHJcbnByb2ZpbGVFZGl0QnV0dG9uLmFkZEV2ZW50TGlzdGVuZXIoXCJjbGlja1wiLCAoKSA9PiB7XHJcbiAgZm9ybVZhbGlkYXRvcnNbXCJwcm9maWxlRm9ybVwiXS5yZXNldFZhbGlkYXRpb24oKTtcclxuICBhcGlcclxuICAgIC5nZXRVc2VyRGF0YSgpXHJcbiAgICAudGhlbigoZGF0YSkgPT4ge1xyXG4gICAgICBwcm9maWxlTmFtZUlucHV0LnZhbHVlID0gZGF0YS5uYW1lO1xyXG4gICAgICBwcm9maWxlQWJvdXRJbnB1dC52YWx1ZSA9IGRhdGEuYWJvdXQ7XHJcbiAgICAgIHByb2ZpbGVQb3B1cC5vcGVuKCk7XHJcbiAgICB9KVxyXG4gICAgLmNhdGNoKChlcnIpID0+IGNvbnNvbGUuZXJyb3IoYCR7ZXJyfSBQcm9maWxlIGRhdGEgbWF5IGJlIGluY29ycmVjdGApKTtcclxufSk7XHJcblxyXG5jYXJkQWRkQnV0dG9uLmFkZEV2ZW50TGlzdGVuZXIoXCJjbGlja1wiLCAoKSA9PiB7XHJcbiAgZm9ybVZhbGlkYXRvcnNbXCJhZGRDYXJkRm9ybVwiXS5yZXNldFZhbGlkYXRpb24oKTtcclxuICBuZXdDYXJkUG9wdXAub3BlbigpO1xyXG59KTtcclxuXHJcbmF2YXRhclVwZGF0ZUJ1dHRvbi5hZGRFdmVudExpc3RlbmVyKFwiY2xpY2tcIiwgKCkgPT4ge1xyXG4gIGZvcm1WYWxpZGF0b3JzW1wiYXZhdGFyVXBkYXRlXCJdLnJlc2V0VmFsaWRhdGlvbigpO1xyXG4gIGF2YXRhclBvcHVwLm9wZW4oKTtcclxufSk7XHJcbiIsImNsYXNzIEFwaSB7XHJcbiAgY29uc3RydWN0b3Iob3B0aW9ucykge1xyXG4gICAgdGhpcy5fYmFzZVVybCA9IG9wdGlvbnMuYmFzZVVybDtcclxuICAgIHRoaXMuX2F1dGggPSBvcHRpb25zLmF1dGhvcml6YXRpb247XHJcbiAgICB0aGlzLl9pZDtcclxuICB9XHJcblxyXG4gIGdldEluaXRpYWxDYXJkcygpIHtcclxuICAgIHJldHVybiBmZXRjaChgJHt0aGlzLl9iYXNlVXJsfS9jYXJkc2AsIHtcclxuICAgICAgaGVhZGVyczoge1xyXG4gICAgICAgIGF1dGhvcml6YXRpb246IGAke3RoaXMuX2F1dGh9YCxcclxuICAgICAgfSxcclxuICAgIH0pLnRoZW4odGhpcy5fY2hlY2tSZXNwb25zZSk7XHJcbiAgfVxyXG5cclxuICBnZXRVc2VyRGF0YSgpIHtcclxuICAgIHJldHVybiBmZXRjaChgJHt0aGlzLl9iYXNlVXJsfS91c2Vycy9tZWAsIHtcclxuICAgICAgbWV0aG9kOiBcIkdFVFwiLFxyXG4gICAgICBoZWFkZXJzOiB7XHJcbiAgICAgICAgYXV0aG9yaXphdGlvbjogYCR7dGhpcy5fYXV0aH1gLFxyXG4gICAgICAgIFwiQ29udGVudC1UeXBlXCI6IFwiYXBwbGljYXRpb24vanNvblwiLFxyXG4gICAgICB9LFxyXG4gICAgfSkudGhlbih0aGlzLl9jaGVja1Jlc3BvbnNlKTtcclxuICB9XHJcblxyXG4gIHVwZGF0ZVVzZXJEYXRhKHsgbmFtZSwgYWJvdXQgfSkge1xyXG4gICAgcmV0dXJuIGZldGNoKGAke3RoaXMuX2Jhc2VVcmx9L3VzZXJzL21lYCwge1xyXG4gICAgICBtZXRob2Q6IFwiUEFUQ0hcIixcclxuICAgICAgaGVhZGVyczoge1xyXG4gICAgICAgIGF1dGhvcml6YXRpb246IGAke3RoaXMuX2F1dGh9YCxcclxuICAgICAgICBcIkNvbnRlbnQtVHlwZVwiOiBcImFwcGxpY2F0aW9uL2pzb25cIixcclxuICAgICAgfSxcclxuICAgICAgYm9keTogSlNPTi5zdHJpbmdpZnkoeyBuYW1lOiBgJHtuYW1lfWAsIGFib3V0OiBgJHthYm91dH1gIH0pLFxyXG4gICAgfSkudGhlbih0aGlzLl9jaGVja1Jlc3BvbnNlKTtcclxuICB9XHJcblxyXG4gIHVwZGF0ZUF2YXRhcihsaW5rKSB7XHJcbiAgICByZXR1cm4gZmV0Y2goYCR7dGhpcy5fYmFzZVVybH0vdXNlcnMvbWUvYXZhdGFyYCwge1xyXG4gICAgICBtZXRob2Q6IFwiUEFUQ0hcIixcclxuICAgICAgaGVhZGVyczoge1xyXG4gICAgICAgIGF1dGhvcml6YXRpb246IGAke3RoaXMuX2F1dGh9YCxcclxuICAgICAgICBcIkNvbnRlbnQtVHlwZVwiOiBcImFwcGxpY2F0aW9uL2pzb25cIixcclxuICAgICAgfSxcclxuICAgICAgYm9keTogSlNPTi5zdHJpbmdpZnkoeyBhdmF0YXI6IGxpbmsgfSksXHJcbiAgICB9KS50aGVuKHRoaXMuX2NoZWNrUmVzcG9uc2UpO1xyXG4gIH1cclxuXHJcbiAgZ2V0Q2FyZHMoaWQpIHtcclxuICAgIHJldHVybiBmZXRjaChgJHt0aGlzLl9iYXNlVXJsfS9jYXJkcy8ke2lkfWAsIHtcclxuICAgICAgbWV0aG9kOiBcIkdFVFwiLFxyXG4gICAgICBoZWFkZXJzOiB7XHJcbiAgICAgICAgYXV0aG9yaXphdGlvbjogYCR7dGhpcy5fYXV0aH1gLFxyXG4gICAgICB9LFxyXG4gICAgfSkudGhlbih0aGlzLl9jaGVja1Jlc3BvbnNlKTtcclxuICB9XHJcblxyXG4gIGNyZWF0ZUNhcmQoeyBuYW1lLCBsaW5rIH0pIHtcclxuICAgIHJldHVybiBmZXRjaChgJHt0aGlzLl9iYXNlVXJsfS9jYXJkc2AsIHtcclxuICAgICAgbWV0aG9kOiBcIlBPU1RcIixcclxuICAgICAgaGVhZGVyczoge1xyXG4gICAgICAgIGF1dGhvcml6YXRpb246IGAke3RoaXMuX2F1dGh9YCxcclxuICAgICAgICBcIkNvbnRlbnQtVHlwZVwiOiBcImFwcGxpY2F0aW9uL2pzb25cIixcclxuICAgICAgfSxcclxuICAgICAgYm9keTogSlNPTi5zdHJpbmdpZnkoeyBuYW1lOiBgJHtuYW1lfWAsIGxpbms6IGAke2xpbmt9YCB9KSxcclxuICAgIH0pLnRoZW4odGhpcy5fY2hlY2tSZXNwb25zZSk7XHJcbiAgfVxyXG5cclxuICBkZWxldGVDYXJkKGlkKSB7XHJcbiAgICByZXR1cm4gZmV0Y2goYCR7dGhpcy5fYmFzZVVybH0vY2FyZHMvJHtpZH1gLCB7XHJcbiAgICAgIG1ldGhvZDogXCJERUxFVEVcIixcclxuICAgICAgaGVhZGVyczoge1xyXG4gICAgICAgIGF1dGhvcml6YXRpb246IGAke3RoaXMuX2F1dGh9YCxcclxuICAgICAgICBcIkNvbnRlbnQtVHlwZVwiOiBcImFwcGxpY2F0aW9uL2pzb25cIixcclxuICAgICAgfSxcclxuICAgIH0pLnRoZW4odGhpcy5fY2hlY2tSZXNwb25zZSk7XHJcbiAgfVxyXG5cclxuICBsaWtlQ2FyZChpZCkge1xyXG4gICAgdGhpcy5fY2hlY2tSZXNwb25zZShgJHt0aGlzLl9iYXNlVXJsfS9jYXJkcy8ke2lkfS9saWtlc2AsIHtcclxuICAgICAgbWV0aG9kOiBcIlBVVFwiLFxyXG4gICAgICBoZWFkZXJzOiB7XHJcbiAgICAgICAgYXV0aG9yaXphdGlvbjogYCR7dGhpcy5fYXV0aH1gLFxyXG4gICAgICAgIFwiQ29udGVudC1UeXBlXCI6IFwiYXBwbGljYXRpb24vanNvblwiLFxyXG4gICAgICB9LFxyXG4gICAgICBib2R5OiBKU09OLnN0cmluZ2lmeSh7IGlzTGlrZWQ6IHRydWUgfSksXHJcbiAgICB9KTtcclxuICB9XHJcblxyXG4gIGRpc0xpa2VDYXJkKGlkKSB7XHJcbiAgICB0aGlzLl9jaGVja1Jlc3BvbnNlKGAke3RoaXMuX2Jhc2VVcmx9L2NhcmRzLyR7aWR9L2xpa2VzYCwge1xyXG4gICAgICBtZXRob2Q6IFwiREVMRVRFXCIsXHJcbiAgICAgIGhlYWRlcnM6IHtcclxuICAgICAgICBhdXRob3JpemF0aW9uOiBgJHt0aGlzLl9hdXRofWAsXHJcbiAgICAgICAgXCJDb250ZW50LVR5cGVcIjogXCJhcHBsaWNhdGlvbi9qc29uXCIsXHJcbiAgICAgIH0sXHJcbiAgICB9KS50aGVuKHRoaXMuX2NoZWNrUmVzcG9uc2UpO1xyXG4gIH1cclxuXHJcbiAgX2NoZWNrUmVzcG9uc2UocmVzKSB7XHJcbiAgICBpZiAocmVzLm9rKSB7XHJcbiAgICAgIHJldHVybiByZXMuanNvbigpO1xyXG4gICAgfVxyXG4gICAgcmV0dXJuIFByb21pc2UucmVqZWN0KGBFcnJvcjogJHtyZXMuc3RhdHVzfWApO1xyXG4gIH1cclxuXHJcbiAgX3JlcXVlc3QodXJsLCBvcHRpb25zKSB7XHJcbiAgICByZXR1cm4gZmV0Y2godXJsLCBvcHRpb25zKS50aGVuKHRoaXMuX2NoZWNrUmVzcG9uc2UpO1xyXG4gIH1cclxuICAvLyoqKioqKiBUcmllZCB0aGlzIG1ldGhvZCBhbmQgaXQgbWFkZSB0aGUgZWFjaCBBcGkgZ2V0VXNlckRhdGEoKSBub3Qgb3BlcmFibGUsIGFuZCBzZWVtcyB0byB0aGluayBpdHMgbm90IGEgcHJvbWlzZS4uLlxyXG59XHJcblxyXG5leHBvcnQgZGVmYXVsdCBBcGk7XHJcbiIsImltcG9ydCBQb3B1cCBmcm9tIFwiLi9Qb3B1cC5qc1wiO1xyXG5cclxuY2xhc3MgUG9wdXBXaXRoSW1hZ2UgZXh0ZW5kcyBQb3B1cCB7XHJcbiAgY29uc3RydWN0b3IocG9wdXBTZWxlY3Rvcikge1xyXG4gICAgc3VwZXIoeyBwb3B1cFNlbGVjdG9yIH0pO1xyXG4gICAgdGhpcy5fcG9wdXBJbWFnZSA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIubW9kYWxfX3BpY3R1cmUtdmlld1wiKTtcclxuICAgIHRoaXMuX3BvcHVwVGl0bGUgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiLm1vZGFsX19waWN0dXJlLWhlYWRpbmdcIik7XHJcbiAgfVxyXG5cclxuICBvcGVuKHsgbmFtZSwgbGluayB9KSB7XHJcbiAgICB0aGlzLl9wb3B1cEltYWdlLnNyYyA9IGxpbms7XHJcbiAgICB0aGlzLl9wb3B1cEltYWdlLmFsdCA9IG5hbWU7XHJcbiAgICB0aGlzLl9wb3B1cFRpdGxlLnRleHRDb250ZW50ID0gbmFtZTtcclxuICAgIHN1cGVyLm9wZW4oKTtcclxuICB9XHJcbn1cclxuXHJcbmV4cG9ydCBkZWZhdWx0IFBvcHVwV2l0aEltYWdlO1xyXG4iLCJpbXBvcnQgeyBjYXJkRGVsZXRlQ29uZmlybUJ1dHRvbiB9IGZyb20gXCIuLi91dGlscy91dGlscy5qc1wiO1xyXG5pbXBvcnQgUG9wdXAgZnJvbSBcIi4vUG9wdXAuanNcIjtcclxuXHJcbmNsYXNzIFBvcHVwQ29uZmlybWF0aW9uIGV4dGVuZHMgUG9wdXAge1xyXG4gIGNvbnN0cnVjdG9yKHBvcHVwU2VsZWN0b3IsIGhhbmRsZURlbGV0ZUNvbmZpcm1hdGlvbikge1xyXG4gICAgc3VwZXIoeyBwb3B1cFNlbGVjdG9yIH0pO1xyXG4gICAgdGhpcy5faGFuZGxlRGVsZXRlQ29uZmlybWF0aW9uID0gaGFuZGxlRGVsZXRlQ29uZmlybWF0aW9uO1xyXG4gIH1cclxuXHJcbiAgb3BlbihjYXJkKSB7XHJcbiAgICBzdXBlci5vcGVuKCk7XHJcbiAgICB0aGlzLl9jYXJkSWQgPSBjYXJkLl9pZDtcclxuICAgIHRoaXMuX2NhcmQgPSBjYXJkO1xyXG4gIH1cclxuXHJcbiAgc2V0RXZlbnRMaXN0ZW5lcnMoKSB7XHJcbiAgICBjYXJkRGVsZXRlQ29uZmlybUJ1dHRvbi5hZGRFdmVudExpc3RlbmVyKFwiY2xpY2tcIiwgKCkgPT4ge1xyXG4gICAgICB0aGlzLl9oYW5kbGVEZWxldGVDb25maXJtYXRpb24odGhpcy5fY2FyZCwgdGhpcy5fY2FyZElkKTtcclxuICAgIH0pO1xyXG4gICAgc3VwZXIuc2V0RXZlbnRMaXN0ZW5lcnMoKTtcclxuICB9XHJcbn1cclxuXHJcbmV4cG9ydCBkZWZhdWx0IFBvcHVwQ29uZmlybWF0aW9uO1xyXG4iXSwibmFtZXMiOlsiY29uc3RydWN0b3IiLCJkYXRhIiwiY2FyZFNlbGVjdG9yIiwiaGFuZGxlSW1hZ2VDbGljayIsImhhbmRsZURlbGV0ZUNsaWNrIiwiaGFuZGxlTGlrZURpc2xpa2VDbGljayIsInRoaXMiLCJfbmFtZSIsIm5hbWUiLCJfbGluayIsImxpbmsiLCJfaWQiLCJfbGlrZVN0YXR1cyIsImlzTGlrZWQiLCJfY2FyZFNlbGVjdG9yIiwiX2hhbmRsZUltYWdlQ2xpY2siLCJfaGFuZGxlRGVsZXRlQ2xpY2siLCJfaGFuZGxlTGlrZURpc2xpa2UiLCJfc2V0RXZlbnRMaXN0ZW5lcnMiLCJfY2FyZEltYWdlRWxlbWVudCIsImFkZEV2ZW50TGlzdGVuZXIiLCJfbGlrZUljb24iLCJfdHJhc2hJY29uIiwiX2hhbmRsZUxpa2VJY29uIiwiY2xhc3NMaXN0IiwidG9nZ2xlIiwiaGFuZGxlRGVsZXRlQ2FyZCIsIl9jYXJkRWxlbWVudCIsInJlbW92ZSIsIl9nZXRUZW1wbGF0ZSIsImRvY3VtZW50IiwicXVlcnlTZWxlY3RvciIsImNvbnRlbnQiLCJjbG9uZU5vZGUiLCJnZXRWaWV3IiwiX2VsZW1lbnQiLCJfY2FyZFRpdGxlRWxlbWVudCIsInRleHRDb250ZW50Iiwic3JjIiwiYWx0IiwiYWRkIiwiX2RlbGV0ZU1vZGFsIiwic2V0dGluZ3MiLCJmb3JtRWwiLCJfZm9ybVNlbGVjdG9yIiwiZm9ybVNlbGVjdG9yIiwiX2lucHV0U2VsZWN0b3IiLCJpbnB1dFNlbGVjdG9yIiwiX3N1Ym1pdEJ1dHRvblNlbGVjdG9yIiwic3VibWl0QnV0dG9uU2VsZWN0b3IiLCJfaW5hY3RpdmVCdXR0b25DbGFzcyIsImluYWN0aXZlQnV0dG9uQ2xhc3MiLCJfaW5wdXRFcnJvckNsYXNzIiwiaW5wdXRFcnJvckNsYXNzIiwiX2Vycm9yQ2xhc3MiLCJlcnJvckNsYXNzIiwiX2Zvcm1FbCIsIl9pbnB1dExpc3QiLCJxdWVyeVNlbGVjdG9yQWxsIiwiX3N1Ym1pdEJ1dHRvbiIsImZvckVhY2giLCJpbnB1dEVsIiwiX2lucHV0RWwiLCJfY2hlY2tJbnB1dFZhbGlkaXR5IiwiX3RvZ2dsZUJ1dHRvblN0YXRlIiwiX3Nob3dJbnB1dEVycm9yIiwiX2Vycm9yTWVzc2FnZUVsIiwiaWQiLCJ2YWxpZGF0aW9uTWVzc2FnZSIsInZhbGlkaXR5IiwidmFsaWQiLCJfaGlkZUlucHV0RXJyb3IiLCJfaGFzSW52YWxpZElucHV0IiwiX2VuYWJsZUJ1dHRvbiIsIl9kaXNhYmxlQnV0dG9uIiwiZXZlcnkiLCJkaXNhYmxlZCIsImVuYWJsZVZhbGlkYXRpb24iLCJlIiwicHJldmVudERlZmF1bHQiLCJyZXNldFZhbGlkYXRpb24iLCJwcm9maWxlRWRpdEJ1dHRvbiIsInByb2ZpbGVOYW1lSW5wdXQiLCJwcm9maWxlQWJvdXRJbnB1dCIsImF2YXRhclVwZGF0ZUJ1dHRvbiIsImNhcmRBZGRCdXR0b24iLCJjYXJkTGlzdEVsZW1lbnQiLCJjYXJkRGVsZXRlQ29uZmlybUJ1dHRvbiIsIl9yZWYiLCJwb3B1cFNlbGVjdG9yIiwiX21vZGFsRWwiLCJvcGVuIiwiX2hhbmRsZUVzYyIsImNsb3NlIiwicmVtb3ZlRXZlbnRMaXN0ZW5lciIsImtleSIsInNldEV2ZW50TGlzdGVuZXJzIiwidGFyZ2V0IiwiY29udGFpbnMiLCJQb3B1cCIsImhhbmRsZUZvcm1TdWJtaXQiLCJzdXBlciIsIl9wb3B1cEZvcm0iLCJfaGFuZGxlRm9ybVN1Ym1pdCIsIl9saXN0Iiwic2V0U2F2ZSIsInJlc2V0Iiwic2V0TG9hZGluZyIsImxvYWRpbmciLCJfZ2V0SW5wdXRWYWx1ZXMiLCJpbnB1dERhdGEiLCJpbnB1dCIsInZhbHVlIiwidXNlckRhdGEiLCJfYWJvdXQiLCJhYm91dCIsIl9hdmF0YXIiLCJhdmF0YXIiLCJnZXRVc2VySW5mbyIsInNldFVzZXJBdmF0YXIiLCJzZXRVc2VySW5mbyIsImNvbnRhaW5lciIsInJlbmRlcmVyIiwiX2l0ZW1zIiwiX3JlbmRlcmVyIiwiX2NvbnRhaW5lciIsInJlbmRlckl0ZW1zIiwiaXRlbSIsImFkZEl0ZW0iLCJlbGVtZW50IiwicHJlcGVuZCIsImZvcm1WYWxpZGF0b3JzIiwiY2FyZFNlY3Rpb24iLCJpbml0aWFsVXNlckRhdGEiLCJjb25maWciLCJBcnJheSIsImZyb20iLCJmb3JtRWxlbWVudCIsInZhbGlkYXRvciIsIkZvcm1WYWxpZGF0b3IiLCJmb3JtTmFtZSIsImdldEF0dHJpYnV0ZSIsImFwaSIsIm9wdGlvbnMiLCJfYmFzZVVybCIsImJhc2VVcmwiLCJfYXV0aCIsImF1dGhvcml6YXRpb24iLCJnZXRJbml0aWFsQ2FyZHMiLCJmZXRjaCIsImhlYWRlcnMiLCJ0aGVuIiwiX2NoZWNrUmVzcG9uc2UiLCJnZXRVc2VyRGF0YSIsIm1ldGhvZCIsInVwZGF0ZVVzZXJEYXRhIiwiYm9keSIsIkpTT04iLCJzdHJpbmdpZnkiLCJ1cGRhdGVBdmF0YXIiLCJnZXRDYXJkcyIsImNyZWF0ZUNhcmQiLCJfcmVmMiIsImRlbGV0ZUNhcmQiLCJsaWtlQ2FyZCIsImRpc0xpa2VDYXJkIiwicmVzIiwib2siLCJqc29uIiwiUHJvbWlzZSIsInJlamVjdCIsInN0YXR1cyIsIl9yZXF1ZXN0IiwidXJsIiwiVXNlckluZm8iLCJjYXRjaCIsImVyciIsImNvbnNvbGUiLCJlcnJvciIsIlNlY3Rpb24iLCJjYXJkRWxlbWVudCIsImNhcmRJdGVtIiwiY2FyZCIsIkNhcmQiLCJpbWdQb3B1cCIsImRlbGV0ZUNvbmZpcm1Qb3B1cCIsImxpa2VTdGF0dXMiLCJfcG9wdXBJbWFnZSIsIl9wb3B1cFRpdGxlIiwicHJvZmlsZVBvcHVwIiwiUG9wdXBXaXRoRm9ybSIsImZpbmFsbHkiLCJuZXdDYXJkUG9wdXAiLCJjYXJkRGF0YSIsImNhcmRGb3JtRWxlbWVudCIsImhhbmRsZURlbGV0ZUNvbmZpcm1hdGlvbiIsIl9oYW5kbGVEZWxldGVDb25maXJtYXRpb24iLCJfY2FyZElkIiwiX2NhcmQiLCJhdmF0YXJQb3B1cCJdLCJzb3VyY2VSb290IjoiIn0=