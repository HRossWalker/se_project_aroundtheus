!function(){"use strict";var t=class{constructor(t,e,s){this._name=t.name,this._link=t.link,this._cardSelector=e,this._handleImageClick=s}_setEventListeners(){this._cardImageElement.addEventListener("click",(()=>this._handleImageClick(this))),this._likeIcon.addEventListener("click",(()=>this._handleLikeIcon())),this._trashIcon.addEventListener("click",(()=>this._handleDeleteCard()))}_handleLikeIcon(){this._likeIcon.classList.toggle("card__like-button_active")}_handleDeleteCard(){this._cardElement.remove(),this._cardElement=null}_getTemplate(){return this._cardElement=document.querySelector(this._cardSelector).content.querySelector(".card").cloneNode(!0),this._cardElement}getView(){return this._el=this._getTemplate(),this._cardTitleElement=this._cardElement.querySelector(".card__title"),this._cardTitleElement.textContent=this._name,this._cardImageElement=this._cardElement.querySelector(".card__image"),this._cardImageElement.src=this._link,this._cardImageElement.alt=this._name,this._likeIcon=this._cardElement.querySelector(".card__like-button"),this._trashIcon=this._cardElement.querySelector(".card__trash-button"),this._setEventListeners(),this._el}},e=class{constructor(t,e){this._formSelector=t.formSelector,this._inputSelector=t.inputSelector,this._submitButtonSelector=t.submitButtonSelector,this._inactiveButtonClass=t.inactiveButtonClass,this._inputErrorClass=t.inputErrorClass,this._errorClass=t.errorClass,this._formEl=e,this._inputList=[...this._formEl.querySelectorAll(this._inputSelector)],this._submitButton=this._formEl.querySelector(this._submitButtonSelector)}_setEventListeners(){this._inputList.forEach((t=>{t.addEventListener("input",(()=>{this._inputEl=t,this._checkInputValidity(t),this._toggleButtonState()}))}))}_showInputError(){this._errorMessageEl=document.querySelector(`#${this._inputEl.id}-error`),this._errorMessageEl.textContent=this._inputEl.validationMessage,this._inputEl.classList.add(this._inputErrorClass),this._errorMessageEl.classList.add(this._errorClass)}_checkInputValidity(){if(!this._inputEl.validity.valid)return this._showInputError();this._hideInputError()}_hideInputError(){this._errorMessageEl=document.querySelector(`#${this._inputEl.id}-error`),this._errorMessageEl.textContent="",this._inputEl.classList.remove(this._inputErrorClass),this._errorMessageEl.classList.remove(this._errorClass)}_toggleButtonState(){this._hasInvalidInput(this._inputList)?this._enableButton(this._inactiveButtonClass):this._disableButton(this._inactiveButtonClass)}_hasInvalidInput(){return!this._inputList.every((t=>t.validity.valid))}_enableButton(){this._submitButton.classList.add(this._inactiveButtonClass),this._submitButton.disabled=!0}_disableButton(){this._submitButton.classList.remove(this._inactiveButtonClass),this._submitButton.disabled=!1}enableValidation(){this._formEl.addEventListener("submit",(t=>{t.preventDefault()})),this._setEventListeners()}resetValidation(){this._toggleButtonState(),this._inputList.forEach((t=>{this._inputEl=t,this._hideInputError()}))}},s=class{constructor(t){let{popupSelector:e}=t;this._modalEl=document.querySelector(e)}open(){this._modalEl.classList.add("modal_opened"),document.addEventListener("keyup",this._handleEsc)}close(){this._modalEl.classList.remove("modal_opened"),document.removeEventListener("keyup",this._handleEsc)}_handleEsc=t=>{"Escape"===t.key&&this.close()};setEventListeners(){this._modalEl.addEventListener("mousedown",(t=>{t.target.classList.contains("modal_opened")&&this.close(),t.target.classList.contains("modal__close")&&this.close()}))}},n=class extends s{constructor(t,e){super({popupSelector:t}),this._popupForm=this._modalEl.querySelector(".modal__form"),this._handleFormSubmit=e,this._list=[...this._popupForm.querySelectorAll(".modal__input")]}close(){this._popupForm.reset(),super.close()}_getInputValues(){const t={};return this._list.forEach((e=>{t[e.name]=e.value})),t}setEventListeners(){super.setEventListeners(),this._popupForm.addEventListener("submit",(()=>{this._handleFormSubmit(this._getInputValues())})),super.setEventListeners()}};const i=document.querySelector("#profile-edit-button"),r=document.querySelector("#modal-name-input"),o=document.querySelector("#modal-job-input"),a=document.querySelector("#card-add-button"),l=document.querySelector(".cards__list");const c={};var u;u={formSelector:".modal__form",inputSelector:".modal__input",submitButtonSelector:".modal__save-button",inactiveButtonClass:"modal__button-disabled",inputErrorClass:"modal__input_type_error",errorClass:"modal__input-error_visible"},Array.from(document.querySelectorAll(u.formSelector)).forEach((t=>{const s=new e(u,t),n=t.getAttribute("name");c[n]=s,s.enableValidation()}));const _=e=>new t(e,"#card-template",(()=>{console.log(e),d.open(e)})).getView(),d=new class extends s{constructor(t){super({popupSelector:t}),this._popupImage=document.querySelector(".modal__picture-view"),this._popupTitle=document.querySelector(".modal__picture-heading")}open(t){let{name:e,link:s}=t;this._popupImage.src=s,this._popupImage.alt=e,this._popupTitle.textContent=e,super.open()}}("#card-picture-modal");d.setEventListeners();const h=new class{constructor(t,e){let{data:s,renderer:n}=t;this._items=s,this._renderer=n,this._container=e}renderItems(){this._items.forEach((t=>{this._renderer(t)}))}addItem(t){this._container.prepend(t)}}({data:[{name:"Yosemite Valley",link:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/yosemite.jpg"},{name:"Lake Louise",link:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/lake-louise.jpg"},{name:"Bald Mountains",link:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/bald-mountains.jpg"},{name:"Latemar",link:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/latemar.jpg"},{name:"Vanoise National Park",link:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/vanoise.jpg"},{name:"Lago di Braies",link:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/lago.jpg"}],renderer:t=>{const e=_(t);h.addItem(e)}},l);h.renderItems();const m=new class{constructor(t,e){this._name=document.querySelector(t),this._job=document.querySelector(e)}getUserInfo(){return{name:this._name.textContent,job:this._job.textContent}}setUserInfo(t){let{name:e,job:s}=t;this._name.textContent=e,this._job.textContent=s}}(".profile__name",".profile__job"),p=new n("#profile-edit-modal",(t=>{p.close(),m.setUserInfo(t)}));p.setEventListeners();const E=new n("#card-add-modal",(t=>{console.log(t);const e=_(t);h.addItem(e),E.close()}));E.setEventListeners(),i.addEventListener("click",(()=>{c.profileForm.resetValidation();const t=m.getUserInfo();r.value=t.name,o.value=t.job,p.open()})),a.addEventListener("click",(()=>{c.addCardForm.resetValidation(),E.open()}))}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,